{"version":3,"sources":["logo.svg","Table_mine.js","Animated_hr.jsx","Header.jsx","Display_simple_graph.jsx","Display_bubble_graph.jsx","Tooltip.jsx","data_test_topics.js","App.js","reportWebVitals.js","index.js"],"names":["Table","columns","data","useState","filterInput","setFilterInput","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","class","value","onChange","e","target","undefined","placeholder","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","className","isSorted","isSortedDesc","render","row","i","getRowProps","cells","cell","getCellProps","Animated_bar","props","myself","React","createRef","this","align","ref","style","marginRight","marginLeft","anime","targets","current","width","duration","easing","Component","Display_simple_graph","margin","height","draw","svg","d3","tooltip","selectAll","remove","append","attr","length","x_max","Math","max","input","x","y_max","y","domain","range","y_axis","enter","d","text","on","transition","html","clientX","clientY","defaultProps","Display_bubble_graph","benjamin","benjamax","outmin","outmax","copy_of_data","Object","assign","nodes","entries","vals","keys","key","max_value","min_value","min","push","name","radius","u","g","alphaDecay","force","strength","merge","Tooltip","state","position","padding","backgroundColor","left","top","opacity","id","content_text","full_name","html_url","stargazers_count","language","created_at","topics","App","list_of_starred","distribution_of_languages","display","justifyContent","minHeight","flexDirection","alignItems","to","exact","path","extract_star_count","data_test","to_return","forEach","element","hehe","round","was_incremented","Header","accessor","Cell","values","score","show","url","type","genres","status","runtime","premiered","officialSite","schedule","time","days","a","eva","get_repos","user","page","axios","get","then","res","get_topics_API","get_topics_scrapping","error","console","log","list_of_repos","extracted","info_extracted","names","coso","setState","tmp","repo","Genres","genre","idx","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da9f63ba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport { useTable, useFilters, useSortBy } from \"react-table\";\r\n\r\nexport default function Table({ columns, data }) {\r\n  const [filterInput, setFilterInput] = useState(\"\");\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    setFilter\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data\r\n    },\r\n    useFilters,\r\n    useSortBy\r\n  );\r\n\r\n  const handleFilterChange = e => {\r\n    const value = e.target.value || undefined;\r\n    setFilter(\"name\", value);\r\n    setFilterInput(value);\r\n  };\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n\r\n      <input\r\n        class       = \"rounded_input\"\r\n        value       = {filterInput}\r\n        onChange    = {handleFilterChange}\r\n        placeholder = {\"Repo name ✨\"}\r\n      />\r\n      \r\n      <div class=\"element_spacer\"></div>\r\n\r\n      <table {...getTableProps()}>\r\n\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  className={\r\n                    column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \"sort-desc\"\r\n                        : \"sort-asc\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n\r\n      </table>\r\n\r\n    </>\r\n  );\r\n}","\r\nimport React, { Component } from \"react\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\n\r\nexport default class Animated_bar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myself = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.align === \"R\") {\r\n            return <hr ref={this.myself} style={{ marginRight: \"0px\" }}></hr>;\r\n        } else if (this.props.align === \"L\") {\r\n            return <hr ref={this.myself} style={{ marginLeft: \"0px\" }}></hr>;\r\n        } else {\r\n            return <hr ref={this.myself} style={{}}></hr>;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        anime({\r\n            targets: this.myself.current,\r\n            width: [\"0%\", \"100%\"],\r\n            duration: 5000,\r\n            easing: \"easeOutQuint\", // https://easings.net\r\n        });\r\n    }\r\n}\r\n","\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Animated_bar from \"./Animated_hr.jsx\";\r\n\r\nexport default class Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (<div\r\n        style={{\r\n            width         : \"100%\",\r\n            display       : \"flex\",\r\n            // flexGrow      : 1,\r\n            justifyContent: \"center\",\r\n            // flexDirection : \"row\",\r\n        }}>\r\n        {/* <div style={{backgroundColor:\"black\", width:\"calc(50% - 100px - 10px)\"}}><Animated_bar/></div> */}\r\n\r\n            <div\r\n                style={{\r\n                    // backgroundColor: \"black\",\r\n                    width: \"calc(50% - 100px)\",\r\n                    // display        : \"table\",\r\n                    // verticalAlign  : \"middle\",\r\n                    // textAlign      : \"center\",\r\n\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"left\",\r\n                    alignItems: \"center\",\r\n                    // alignContent  : \"flex-start\",\r\n                    // alignContent:\"center\"\r\n\r\n                    // display:flex;\r\n                    // flexDirection: \"row\",\r\n                    // justify-content: center;\r\n                }}\r\n            >\r\n                <Animated_bar align=\"R\" />\r\n                {/* <div style={{width:\"20px\", height:\"20px\", backgroundColor:\"blue\"}}></div> */}\r\n            </div>\r\n\r\n            {/* <div style={{}}> <Animated_bar/> asd </div> */}\r\n            <div\r\n                style={{\r\n                    width          : \"200px\",\r\n                    height         : \"200px\",\r\n                    // backgroundColor: \"red\"  ,\r\n                }}\r\n            >\r\n                <img src={this.state.user_profilepic} style={{width:\"100%\", borderRadius:\"50%\"}} />\r\n            </div>\r\n\r\n\r\n            <div\r\n                style={{\r\n                    // backgroundColor: \"black\",\r\n                    width: \"calc(50% - 100px)\",\r\n                    // display        : \"table\",\r\n                    // verticalAlign  : \"middle\",\r\n                    // textAlign      : \"center\",\r\n\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"left\",\r\n                    alignItems: \"center\",\r\n                    // alignContent  : \"flex-start\",\r\n                    // alignContent:\"center\"\r\n\r\n                    // display:flex;\r\n                    // flex-direction: column;\r\n                    // justify-content: center;\r\n                }}\r\n            >\r\n            <Animated_bar align=\"L\"/>\r\n            {/* <div style={{width:\"20px\", height:\"20px\", backgroundColor:\"blue\"}}></div> */}\r\n            </div>\r\n\r\n        </div>)\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n\r\n        const user_profileinfo = (user) =>\r\n            axios\r\n            .get(`https://api.github.com/users/${user}`)\r\n            .then((res) => res.data);\r\n\r\n        // user_prof(\"egeres\").then(console.log);\r\n        // user_prof(\"egeres\").then((res) => {console.log(\"asdadsads\");console.log(res);console.log(res.avatar_url)});\r\n\r\n\r\n        user_profileinfo(this.props.user).then(\r\n            (res) => {\r\n                // console.log(\"asdadsads\");\r\n                // console.log(res);\r\n                // console.log(res.avatar_url)\r\n                this.setState({ user_profilepic: res.avatar_url})\r\n            }\r\n        );\r\n\r\n\r\n    }\r\n}","\r\n// https://www.d3-graph-gallery.com/intro_d3js.html\r\n// http://www.d3noob.org/2013/01/making-dashed-line-in-d3js.html\r\n// https://observablehq.com/@d3/gallery\r\n// https://observablehq.com/@d3/brushable-scatterplot\r\n\r\nimport React, { Component } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { svg } from \"d3\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Display_simple_graph extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.myself = React.createRef();\r\n        this.margin = 0\r\n        this.width  = 1000\r\n        this.height = 1000\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (<svg ref={this.myself} width={this.props.width+\"px\"} height={this.props.height+\"px\"}></svg>)\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.draw()\r\n    }\r\n    \r\n    componentDidUpdate()\r\n    {\r\n        this.draw()\r\n    }\r\n\r\n    draw()\r\n    {\r\n        let svg     = d3.select(this.myself.current);\r\n        let tooltip = d3.select(\"#Tooltip\")\r\n\r\n        svg.selectAll(\"*\").remove();\r\n\r\n        svg.append(\"rect\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            .attr(\"width\",  1000)\r\n            .attr(\"height\", 1000)\r\n            .style(\"fill\", \"#0e0e0e\");\r\n\r\n        svg.append(\"line\")\r\n            .attr(\"x1\", 0)\r\n            .attr(\"y1\", this.props.height - this.props.margin)\r\n            .attr(\"x2\", 1000)\r\n            .attr(\"y2\", this.props.height - this.props.margin)\r\n            .style(\"stroke-dasharray\", (\"3, 3\"))\r\n            .style(\"stroke\", \"#343434\");\r\n\r\n        svg.append(\"line\")\r\n            .attr(\"x1\", 0)\r\n            .attr(\"y1\", this.props.margin)\r\n            .attr(\"x2\", 1000)\r\n            .attr(\"y2\", this.props.margin)\r\n            .style(\"stroke-dasharray\", (\"3, 3\"))\r\n            .style(\"stroke\", \"#343434\");\r\n\r\n        svg.append(\"line\")\r\n            .attr(\"x1\", this.props.margin)\r\n            .attr(\"y1\", 0)\r\n            .attr(\"x2\", this.props.margin)\r\n            .attr(\"y2\", this.props.height)\r\n            .style(\"stroke-dasharray\", (\"3, 3\"))\r\n            .style(\"stroke\", \"#343434\");\r\n\r\n        svg.append(\"line\")\r\n            .attr(\"x1\", this.props.width - this.props.margin)\r\n            .attr(\"y1\", 0)\r\n            .attr(\"x2\", this.props.width - this.props.margin)\r\n            .attr(\"y2\", this.props.height)\r\n            .style(\"stroke-dasharray\", (\"3, 3\"))\r\n            .style(\"stroke\", \"#343434\");\r\n\r\n\r\n        if (this.props.data.length)\r\n        {\r\n            // console.log(this.props.data)\r\n\r\n            let x_max = Math.max(...this.props.data.map(input => input.x));\r\n            let y_max = Math.max(...this.props.data.map(input => input.y));\r\n\r\n            let x = d3.scaleLinear().domain([0, x_max]).range([this.props.margin, this.props.width  - this.props.margin]);\r\n            let y = d3.scaleLinear().domain([0, y_max]).range([this.props.height - this.props.margin, this.props.margin]);\r\n\r\n            // let data = [ {x:10, y:20}, {x:40, y:90}, {x:80, y:50} ]\r\n            \r\n            let y_axis = [0, 0.25, 0.5, 0.75, 1];\r\n\r\n            svg.selectAll(\"Lol\")\r\n                .data(y_axis.map(x => x*y_max))\r\n                .enter()\r\n                .append(\"text\")\r\n                    .attr(\"x\", 25)             \r\n                    .attr(\"y\", (d) => y(d))\r\n                    .attr(\"text-anchor\", \"middle\")  \r\n                    .style(\"font-size\", \"16px\") \r\n                    // .style(\"text-decoration\", \"underline\") \r\n                    .attr(\"fill\", \"white\")\r\n                    .text(d => d);\r\n\r\n            svg.selectAll(\"Lol\")\r\n                .data(y_axis.map(x => x*x_max))\r\n                .enter()\r\n                .append(\"text\")\r\n                    .attr(\"x\", (d) => x(d))\r\n                    .attr(\"y\", this.props.height - 10)             \r\n                    .attr(\"text-anchor\", \"middle\")  \r\n                    .style(\"font-size\", \"16px\") \r\n                    // .style(\"text-decoration\", \"underline\") \r\n                    .attr(\"fill\", \"white\")\r\n                    .text(d => d);\r\n    \r\n            svg.selectAll(\"whatever\")\r\n                .data(this.props.data)\r\n                .enter()\r\n                .append(\"circle\")\r\n                    .attr(\"cx\", function(d){ return x(d.x) })\r\n                    .attr(\"cy\", function(d){ return y(d.y) })\r\n                    .attr(\"r\", 10)\r\n                    .attr('opacity', 0.3)\r\n                    .style(\"fill\", \"#8c8c8c\")\r\n\r\n                    .on(\"mouseover\", function(d) {\r\n                        // console.log(d)\r\n                        tooltip.transition()\t\t\r\n                            .duration(200)\t\t\r\n                            .style(\"opacity\", .9);\t\t\r\n                        tooltip\r\n                            .html(d + \"<br/>\")\t\r\n                            .style(\"left\", (d.clientX) + \"px\")\t\t\r\n                            .style(\"top\",  (d.clientY - 28) + \"px\");\t\r\n\r\n                        d3.select(this).style(\"opacity\", 1)\r\n                    })\t\t\t\t\t\r\n                    .on(\"mouseout\", function(d) {\t\t\r\n                        tooltip.transition()\t\t\r\n                            .duration(500)\t\t\r\n                            .style(\"opacity\", 0);\t\r\n                        d3.select(this).style(\"opacity\", 0.3)\r\n                    })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nDisplay_simple_graph.propTypes = {\r\n    width : PropTypes.number,\r\n    height: PropTypes.number,\r\n    margin: PropTypes.number,\r\n    data  : PropTypes.array,\r\n};\r\n\r\nDisplay_simple_graph.defaultProps = {\r\n    width : 1000,\r\n    height: 1000,\r\n    margin: 10,\r\n    data  : [],\r\n};\r\n","\r\n// https://www.d3-graph-gallery.com/intro_d3js.html\r\n// http://www.d3noob.org/2013/01/making-dashed-line-in-d3js.html\r\n// https://observablehq.com/@d3/gallery\r\n// https://observablehq.com/@d3/brushable-scatterplot\r\n\r\n// https://www.d3-graph-gallery.com/graph/circularpacking_template.html\r\n\r\n// https://www.d3indepth.com/force-layout/\r\n\r\n// https://bl.ocks.org/steveharoz/8c3e2524079a8c440df60c1ab72b5d03\r\n\r\nimport React, { Component } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { svg } from \"d3\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Display_bubble_graph extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.myself = React.createRef();\r\n        this.margin = 0\r\n        this.width  = 1000\r\n        this.height = 1000\r\n        // this.dataaa   = [{radius:20}]\r\n        // this.dataaa   = []\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (<svg ref={this.myself} width={this.props.width+\"px\"} height={this.props.height+\"px\"}></svg>)\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        // console.log(this.props.data)\r\n        // this.dataaa = [{radius:20}]\r\n        this.draw()\r\n    }\r\n    \r\n    componentDidUpdate()\r\n    {\r\n        this.draw()\r\n    }\r\n\r\n    draw()\r\n    {\r\n        let svg     = d3.select(this.myself.current);\r\n        let tooltip = d3.select(\"#Tooltip\")\r\n\r\n        svg.selectAll(\"*\").remove();\r\n\r\n        svg.append(\"rect\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            .attr(\"width\",  1000)\r\n            .attr(\"height\", 1000)\r\n            .style(\"fill\", \"#0e0e0e\");\r\n\r\n        svg.append(\"line\")\r\n            .attr(\"x1\", 0)\r\n            .attr(\"y1\", this.props.height - this.props.margin)\r\n            .attr(\"x2\", 1000)\r\n            .attr(\"y2\", this.props.height - this.props.margin)\r\n            .style(\"stroke-dasharray\", (\"3, 3\"))\r\n            .style(\"stroke\", \"#343434\");\r\n\r\n        svg.append(\"line\")\r\n            .attr(\"x1\", 0)\r\n            .attr(\"y1\", this.props.margin)\r\n            .attr(\"x2\", 1000)\r\n            .attr(\"y2\", this.props.margin)\r\n            .style(\"stroke-dasharray\", (\"3, 3\"))\r\n            .style(\"stroke\", \"#343434\");\r\n\r\n        svg.append(\"line\")\r\n            .attr(\"x1\", this.props.margin)\r\n            .attr(\"y1\", 0)\r\n            .attr(\"x2\", this.props.margin)\r\n            .attr(\"y2\", this.props.height)\r\n            .style(\"stroke-dasharray\", (\"3, 3\"))\r\n            .style(\"stroke\", \"#343434\");\r\n\r\n        svg.append(\"line\")\r\n            .attr(\"x1\", this.props.width - this.props.margin)\r\n            .attr(\"y1\", 0)\r\n            .attr(\"x2\", this.props.width - this.props.margin)\r\n            .attr(\"y2\", this.props.height)\r\n            .style(\"stroke-dasharray\", (\"3, 3\"))\r\n            .style(\"stroke\", \"#343434\");\r\n\r\n\r\n        // if (this.props.data.length)\r\n        if (false)\r\n        {\r\n            // console.log(this.props.data)\r\n\r\n            // let x_max = Math.max(...this.props.data.map(input => input.x));\r\n            // let y_max = Math.max(...this.props.data.map(input => input.y));\r\n\r\n            // let x = d3.scaleLinear().domain([0, x_max]).range([this.props.margin, this.props.width  - this.props.margin]);\r\n            // let y = d3.scaleLinear().domain([0, y_max]).range([this.props.height - this.props.margin, this.props.margin]);\r\n\r\n              // What happens when a circle is dragged?\r\n            function dragstarted(d) {\r\n                if (!d3.event.active) simulation.alphaTarget(.03).restart();\r\n                d.fx = d.x;\r\n                d.fy = d.y;\r\n            }\r\n            function dragged(d) {\r\n                d.fx = d3.event.x;\r\n                d.fy = d3.event.y;\r\n            }\r\n            function dragended(d) {\r\n                if (!d3.event.active) simulation.alphaTarget(.03);\r\n                d.fx = null;\r\n                d.fy = null;\r\n            }\r\n\r\n            var node = svg.append(\"g\")\r\n                .selectAll(\"circle\")\r\n                .data(this.props.data)\r\n                .enter()\r\n                .append(\"circle\")\r\n                .attr(\"class\", \"node\")\r\n                .attr(\"r\", function(d) {return d.density})\r\n                // .attr(\"r\", function(d){ return size(d.value)})\r\n                // .attr(\"r\", function(d){ return size(d.density)})\r\n                .attr(\"cx\", this.props.width  / 2)\r\n                .attr(\"cy\", this.props.height / 2)\r\n                // .style(\"fill\", function(d){ return color(d.region)})\r\n                .style(\"fill\", \"red\")\r\n                // .style(\"fill-opacity\", 0.8)\r\n                .attr(\"stroke\", \"black\")\r\n                .style(\"stroke-width\", 1)\r\n                .call(d3.drag() // call specific function when circle is dragged\r\n                    .on(\"start\", dragstarted)\r\n                    .on(\"drag\", dragged)\r\n                    .on(\"end\", dragended));\r\n\r\n\r\n                \r\n            // Features of the forces applied to the nodes:\r\n            var simulation = d3.forceSimulation()\r\n                .force(\"center\" , d3.forceCenter().x(this.props.width / 2).y(this.props.height / 2)) // Attraction to the center of the svg area\r\n                .force(\"charge\" , d3.forceManyBody().strength(.1)) // Nodes are attracted one each other of value is > 0\r\n                // .force(\"collide\", d3.forceCollide().strength(.2).radius(function(d){ return (size(d.value)+3) }).iterations(1)) // Force that avoids circle overlapping\r\n                .force(\"collide\", d3.forceCollide().strength(.2).radius(function(d){ return d.value+3 }).iterations(1)) // Force that avoids circle overlapping\r\n\r\n            simulation\r\n                .nodes(this.props.data)\r\n                .on(\"tick\", function(d){\r\n                  node\r\n                      .attr(\"cx\", function(d){ return d.x; })\r\n                      .attr(\"cy\", function(d){ return d.y; })\r\n                });\r\n\r\n        }\r\n\r\n        // if (this.props.data.length && true)\r\n        if (true)\r\n        {\r\n            // var nodes = [...this.props.data]\r\n            // var copy_of_data = [...this.props.data]\r\n\r\n            // console.log(\"this props data\", this.props.data)\r\n\r\n            let copy_of_data = {}\r\n            copy_of_data = Object.assign({}, this.props.data)\r\n\r\n            // We parse from this format:\r\n            // {\r\n            //     \"Python\":10,\r\n            //     \"text\"  :4,\r\n            //     \"aaa\"   :0,\r\n            // }\r\n            // To this other format:\r\n            // [\r\n            //     {name:\"Python\", radius:100},\r\n            //     {name:\"text\",   radius:40 },\r\n            //     {name:\"aaa\",    radius:0  },\r\n            // ]\r\n            // console.log(\"copy_of_data\", copy_of_data)\r\n\r\n            var nodes = []\r\n\r\n            if (Object.entries(copy_of_data).length !== 0)\r\n            {\r\n                // let max_value = Math.max(copy_of_data.values())\r\n                // let min_value = Math.min(copy_of_data.values())\r\n\r\n                var vals = Object.keys(copy_of_data).map(function(key) {\r\n                    return copy_of_data[key];\r\n                });\r\n\r\n                let max_value = Math.max(...vals)\r\n                let min_value = Math.min(...vals)\r\n\r\n                function minmaxscale(value, benjamin, benjamax, outmin, outmax)\r\n                {\r\n                    let coso = ((value - benjamin)/benjamax) * (outmax - outmin) + outmin\r\n                    return coso\r\n                }\r\n\r\n                for (var key in copy_of_data)\r\n                {\r\n                    nodes.push({\r\n                        name:key,\r\n                        // radius:copy_of_data[key],\r\n                        radius: minmaxscale(\r\n                            copy_of_data[key],\r\n                            min_value,\r\n                            max_value,\r\n                            50,\r\n                            200,\r\n                        ),\r\n                    })\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            var u = svg\r\n                .selectAll('g')\r\n                .data(nodes)\r\n            \r\n            var g = u\r\n                .enter()\r\n                .append(\"g\")\r\n                .attr('transform', function(d) { return \"translate(-500, -500)\" })\r\n\r\n            var circles = g\r\n                .append('circle')\r\n                .attr('r',  function(d) {return d.radius})\r\n                .style(\"fill\", \"#e62424\")\r\n                // .style(\"stroke\", \"#343434\")\r\n                // .style(\"stroke-width\", 3)\r\n\r\n            var texts = g\r\n                .append(\"text\")\r\n                .attr(\"x\", 0)\r\n                .attr(\"y\", 0)\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .style(\"fill\", \"#e6e2e2e2\")\r\n                .attr(\"dy\", \".35em\")\r\n                .text(function(d) { return d.name; });\r\n\r\n            var simulation   = d3.forceSimulation(nodes)\r\n                .alphaDecay(0.03)\r\n                .force('center',       d3.forceCenter(this.props.width / 2, this.props.height / 2))\r\n                .force(\"attractForce\", d3.forceManyBody().strength(200))\r\n                .force(\"collision\",    d3.forceCollide().radius(function(d) { return d.radius }))\r\n                .on('tick', ticked);\r\n\r\n            function ticked()\r\n            {\r\n\r\n                u = svg\r\n                    .selectAll('g')\r\n                    .data(nodes)\r\n\r\n                g = u\r\n                    .enter()\r\n                    .append(\"g\")\r\n                    .merge(u)\r\n                    .attr('transform', function(d) { return \"translate(\" +  d.x + \",\" + d.y + \")\" })\r\n\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nDisplay_bubble_graph.propTypes = {\r\n    width : PropTypes.number,\r\n    height: PropTypes.number,\r\n    margin: PropTypes.number,\r\n    data  : PropTypes.array,\r\n};\r\n\r\nDisplay_bubble_graph.defaultProps = {\r\n    width : 1000,\r\n    height: 1000,\r\n    margin: 10,\r\n    data  : [],\r\n};\r\n","\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Tooltip extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (<div\r\n        style={{\r\n            position       : \"absolute\",\r\n            padding        : \"10px\",\r\n            backgroundColor: \"#313131\",\r\n            left           : 200,\r\n            top            : 200,\r\n            opacity        : 0,\r\n            // width         : \"100%\",\r\n            // display       : \"flex\",\r\n            // flexGrow      : 1,\r\n            // justifyContent: \"center\",\r\n            // flexDirection : \"row\",\r\n        }} id=\"Tooltip\">\r\n\r\n            {this.props.content_text}\r\n        </div>)\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n\r\n    }\r\n}\r\n\r\nTooltip.propTypes = {\r\n    content_text : PropTypes.number,\r\n};\r\n\r\nTooltip.defaultProps = {\r\n    content_text : \"-\",\r\n};","export default [\r\n    {\r\n        id: 239201565,\r\n        name: \"deepface\",\r\n        full_name: \"serengil/deepface\",\r\n        html_url: \"https://github.com/serengil/deepface\",\r\n        stargazers_count: 1082,\r\n        language: \"Python\",\r\n        created_at: \"2020-02-08T20:42:28Z\",\r\n        topics: [\r\n            \"face-recognition\",\r\n            \"vgg-face\",\r\n            \"facenet\",\r\n            \"openface\",\r\n            \"facial-expression-recognition\",\r\n            \"age-prediction\",\r\n            \"gender-prediction\",\r\n            \"race-classification\",\r\n            \"emotion-recognition\",\r\n            \"deep-learning\",\r\n            \"machine-learning\",\r\n            \"deepface\",\r\n            \"face-analysis\",\r\n            \"tensorflow\",\r\n            \"keras\",\r\n            \"python\",\r\n            \"deepid\",\r\n            \"dlib\",\r\n            \"arcface\",\r\n        ],\r\n    },\r\n    {\r\n        id: 110724756,\r\n        name: \"colabtools\",\r\n        full_name: \"googlecolab/colabtools\",\r\n        html_url: \"https://github.com/googlecolab/colabtools\",\r\n        stargazers_count: 1113,\r\n        language: \"Python\",\r\n        created_at: \"2017-11-14T17:49:51Z\",\r\n        topics: [],\r\n    },\r\n    {\r\n        id: 202990524,\r\n        name: \"UnityFx.Outline\",\r\n        full_name: \"Arvtesh/UnityFx.Outline\",\r\n        html_url: \"https://github.com/Arvtesh/UnityFx.Outline\",\r\n        stargazers_count: 325,\r\n        language: \"C#\",\r\n        created_at: \"2019-08-18T10:43:45Z\",\r\n        topics: [\r\n            \"unityfx\",\r\n            \"outline\",\r\n            \"image-effects\",\r\n            \"post-effect\",\r\n            \"unity\",\r\n            \"unity3d\",\r\n        ],\r\n    },\r\n];\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\n\nimport anime from \"animejs/lib/anime.es.js\";\nimport * as eva from \"eva-icons\";\n\nimport * as cheerio from 'cheerio';\n\n// import TableContainer from \"./TableContainer\"\n// https://thewidlarzgroup.com/react-table-7/\n// https://github.com/TheWidlarzGroup/RT7-example/blob/102c5bbfddf9e01e556b84e81de51ef2cef3ba5e/src/App.js\n\nimport TableContainer from \"./Table_mine\";\nimport Animated_bar from \"./Animated_hr.jsx\";\nimport Header from \"./Header.jsx\";\nimport Display_simple_graph from \"./Display_simple_graph.jsx\";\nimport Display_bubble_graph from \"./Display_bubble_graph.jsx\";\nimport Tooltip from \"./Tooltip.jsx\";\n\n\n\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tLink\n} from \"react-router-dom\";\n\n// https://blog.logrocket.com/complete-guide-building-smart-data-table-react/\n// https://github.com/learnwithparam/logrocket-smart-table\n\nimport { useState, useEffect } from \"react\";\nimport { random } from \"animejs\";\n\n// import data_test from \"./data_test.js\";\nimport data_test from \"./data_test_topics.js\";\n\n// axios.defaults.headers.post['Content-Type'] ='application/x-www-form-urlencoded';\n\n\nclass App extends Component {\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            list_of_starred          : [],\n            distribution_of_languages: {},\n        };\n    }\n\n    render()\n    {\n        return (\n\n            <div style={{ \n                backgroundColor: \"black\",\n                // height         : \"100%\",\n                display        : \"flex\",\n                justifyContent : \"center\",\n                minHeight         : \"100%\",\n            }}>\n            \n            {/* <div class=\"element_spacer\"></div> */}\n\n            {/* 😚 Container of the elements ! */}\n            <div style={{ \n                backgroundColor: \"#0e0e0e\",\n                // backgroundColor: \"red\",\n                // height         : \"100%\",\n                minHeight    : \"100%\",\n                width        : \"1000px\",\n                display      : \"flex\",\n                flexDirection: \"column\",\n                alignItems   : \"center\",\n            }}>\n                <Tooltip></Tooltip>\n\n                <div class=\"element_spacer\"></div>\n\n                {/* <Header user=\"egeres\"></Header> */}\n\n                <Router>\n                <nav>\n                    <div style={{display:\"flex\"}}>\n                        <Link to=\"/\"      class=\"link_router\">Overview</Link>\n                        <p>-</p>\n                        <Link to=\"/table\" class=\"link_router\">Table</Link>\n                        {/* <p>-</p>\n                        <Link to=\"/users\" class=\"link_router\">Users</Link> */}\n                    </div>\n                </nav>\n\n                <div class=\"element_spacer\"></div>\n\n                <Switch>\n                    <Route exact path=\"/\">\n\n                        <div style={{\n                            display:\"flex\"\n                        }}>\n\n                            \n                            {/* <h3>Distribution of starred repos</h3> */}\n                            <Display_simple_graph \n                            data   = {this.extract_star_count(this.state.list_of_starred)}\n                            width  = {500}\n                            height = {500}\n                            margin = {50  }\n                            />\n\n                            {/* <div class=\"element_spacer\"></div> */}\n\n                            <Display_bubble_graph\n                            // data   = {[\n                            //     {name:\"A BBBB\", radius:100},\n                            //     {name:\"B BBBB\", radius:30},\n                            // ]}\n                            data   = {this.state.distribution_of_languages}\n                            width  = {500}\n                            height = {500}\n                            margin = {50  }\n                            />\n\n                        </div> \n                    </Route>\n                    <Route path=\"/table\">\n                        {/* <div> */}\n                        {/* <TableContainer columns={this.columns} data={this.data} /> */}\n                        {/* <TableContainer columns={this.columns} data={this.state.list_of_starred} /> */}\n                        <TableContainer columns={this.columns} data={data_test} />\n                        {/* </div> */}\n                    </Route>\n                </Switch>\n                </Router>\n\n            </div>\n\n            </div>\n\n        );\n    }\n\n    extract_star_count(data)\n    {\n        let to_return = []\n        data.forEach(element => {\n\n            let   hehe    = (Math.round(element.stargazers_count/1000)*1000)/1000\n            \n            let was_incremented = false;\n            for (let i = 0; i < to_return.length; i++) {\n                const element = to_return[i];\n\n                if (element.x == hehe) { element.y += 1; was_incremented = true }\n            }\n\n            if (!was_incremented) { to_return.push({\n                x: hehe,\n                y: 1,\n            }) }\n\n        });\n\n        // console.log(to_return)\n        return to_return\n        // return [{x:10, y:10}, {x:20, y:20}]\n    }\n\n    componentWillMount()\n    {\n\n        this.columns = [\n            // {\n            //     Header: \"Details\",\n            //     columns: [\n                    { Header: \"Name\", accessor: \"name\", },\n                    { Header: \"Stars\", accessor: \"stargazers_count\", },\n                    { Header: \"Language\", accessor: \"language\", },\n                    {\n                        Header: \"Topics\",\n                        accessor: \"topics\",\n                        Cell: ({ cell: { value } }) => (\n                            <Genres values={value} />\n                        ),\n                    },\n                    // { Header: \"Runtime\", accessor: \"show.runtime\", },\n                    // { Header: \"Status\", accessor: \"show.status\", },\n            //     ],\n            // },\n        ];\n\n        this.data = [\n            {\n                score: 17.592657,\n                show: {\n                    id: 44813,\n                    url: \"http://www.tvmaze.com/shows/44813/the-snow-spider\",\n                    name: \"The Snow Spider\",\n                    type: \"Scripted\",\n                    language: \"English\",\n                    genres: [\"Drama\", \"Fantasy\"],\n                    status: \"In Development\",\n                    runtime: 30,\n                    premiered: null,\n                    officialSite: null,\n                    schedule: {\n                        time: \"\",\n                        days: [],\n                    },\n                },\n            },\n            {\n                score: 17.592657,\n                show: {\n                    id: 44813,\n                    url: \"http://www.tvmaze.com/shows/44813/the-snow-spider\",\n                    name: \"The cook\",\n                    type: \"Scripted\",\n                    language: \"English\",\n                    genres: [\"Drama\", \"Fantasy\"],\n                    status: \"In Development\",\n                    runtime: 20,\n                    premiered: null,\n                    officialSite: null,\n                    schedule: {\n                        time: \"\",\n                        days: [],\n                    },\n                },\n            },\n            {\n                score: 17.592657,\n                show: {\n                    id: 44813,\n                    url: \"http://www.tvmaze.com/shows/44813/the-snow-spider\",\n                    name: \"The cook\",\n                    type: \"Scripted\",\n                    language: \"English\",\n                    genres: [\"Drama\", \"Fantasy\"],\n                    status: \"In Development\",\n                    runtime: 50,\n                    premiered: null,\n                    officialSite: null,\n                    schedule: {\n                        time: \"\",\n                        days: [],\n                    },\n                },\n            },\n        ];\n\n    }\n\n    async componentDidMount()\n    {\n\n        eva.replace()\n\n        const get_repos = (user, page=0) => axios\n            .get(`https://api.github.com/users/${user}/starred?per_page=100&page=${page+1}`)\n            .then(res => res.data)\n            .then(res => res.map(x => {\n                return {\n                    id              : x.id,\n                    name            : x.name,\n                    full_name       : x.full_name,\n                    html_url        : x.html_url,\n                    stargazers_count: x.stargazers_count,\n                    language        : x.language,\n                    created_at      : x.created_at,\n                    topics          : null,\n                }\n                }\n            ))\n\n        const get_topics_API = (url) => axios\n            .get(url, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\"      : \"application/vnd.github.mercy-preview+json\" // MUST ADD TO INCLUDE TOPICS\n                }\n            })\n            .then((res) => res.data)\n\n        const get_topics_scrapping = (url) => axios\n            .get(url, {\n                headers: {\n                    'Content-Type': 'text/plain',\n                }\n            })\n            .then(\n                (res)   => { if(res.status === 200) { return res.data } },\n                (error) => { console.log(error)}\n            )\n            // .then((html) => {\n            //     let $ = cheerio.load(html);\n            //     return $(\".topic-tag\")\n            //     // topic-tag\n            // })\n            \n\n        let list_of_repos = []\n\n        if (false)\n        {\n            let extracted = \"\"\n            \n            // A while loop would be better tho\n            // We first get a full list of all the repositories\n            for (let page = 0; page < 99999; page++)\n            {\n                extracted = await get_repos(\"egeres\", page).then(x => {return x})\n                if (extracted.length === 0) { break; }\n                else                        { list_of_repos += extracted; }\n            }\n\n            // Secondly, we proceed to extract the different topics present on the repo\n            for await (let info_extracted of list_of_repos)\n            {                \n                info_extracted.topics = await get_topics_API(\"https://api.github.com/repos/\"+info_extracted.full_name+\"/topics\")\n                info_extracted.topics = info_extracted.topics.names\n            }\n        }\n\n        let coso = await get_topics_scrapping(\"https://github.com/cheeriojs/cheerio\")\n        // let coso = await get_topics_scrapping(\"https://dev.to/aurelkurtula\")\n        console.log(coso)\n\n        console.log(\"Finished extracting information from user...\")\n        console.log(list_of_repos)\n        \n\n        this.setState({list_of_starred: data_test})\n\n        let tmp = {};\n        for await (let repo of data_test)\n        {\n            if (!(repo.language in tmp)) { tmp[repo.language] = 1 }\n            else                         { tmp[repo.language]++;  }\n        }\n        this.setState({distribution_of_languages: tmp})\n\n\n        // get_topics(\"https://api.github.com/repos/serengil/deepface/topics\").then(console.log);\n\n        // https://api.github.com/repos/serengil/deepface/topics\n\n\t\t// https://api.github.com/users/karpathy\n    }\n}\n\n// Custom component to render Genres\nconst Genres = ({ values }) => {\n    // Loop through the array and create a badge-like component instead of a comma-separated string\n    return (\n        <>\n            {values.map((genre, idx) => {\n                return (\n                    <span key={idx} className=\"badge\">\n                    {/* <nobr> */}\n                    {genre}\n                    {/* </nobr> */}\n                    </span>\n                );\n            })}\n        </>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}